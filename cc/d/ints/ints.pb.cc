// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: d/ints/ints.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "d/ints/ints.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ints {

namespace {

const ::google::protobuf::Descriptor* Ints1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ints1_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_d_2fints_2fints_2eproto() {
  protobuf_AddDesc_d_2fints_2fints_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "d/ints/ints.proto");
  GOOGLE_CHECK(file != NULL);
  Ints1_descriptor_ = file->message_type(0);
  static const int Ints1_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, i8_),
  };
  Ints1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Ints1_descriptor_,
      Ints1::default_instance_,
      Ints1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Ints1));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_d_2fints_2fints_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Ints1_descriptor_, &Ints1::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_d_2fints_2fints_2eproto() {
  delete Ints1::default_instance_;
  delete Ints1_reflection_;
}

void protobuf_AddDesc_d_2fints_2fints_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021d/ints/ints.proto\022\004ints\"g\n\005Ints1\022\n\n\002i1"
    "\030\001 \002(\005\022\n\n\002i2\030\002 \002(\003\022\n\n\002i3\030\003 \002(\r\022\n\n\002i4\030\004 \002"
    "(\004\022\n\n\002i5\030\005 \001(\005\022\n\n\002i6\030\006 \001(\003\022\n\n\002i7\030\007 \001(\r\022\n"
    "\n\002i8\030\010 \001(\004", 130);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "d/ints/ints.proto", &protobuf_RegisterTypes);
  Ints1::default_instance_ = new Ints1();
  Ints1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_d_2fints_2fints_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_d_2fints_2fints_2eproto {
  StaticDescriptorInitializer_d_2fints_2fints_2eproto() {
    protobuf_AddDesc_d_2fints_2fints_2eproto();
  }
} static_descriptor_initializer_d_2fints_2fints_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Ints1::kI1FieldNumber;
const int Ints1::kI2FieldNumber;
const int Ints1::kI3FieldNumber;
const int Ints1::kI4FieldNumber;
const int Ints1::kI5FieldNumber;
const int Ints1::kI6FieldNumber;
const int Ints1::kI7FieldNumber;
const int Ints1::kI8FieldNumber;
#endif  // !_MSC_VER

Ints1::Ints1()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ints.Ints1)
}

void Ints1::InitAsDefaultInstance() {
}

Ints1::Ints1(const Ints1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ints.Ints1)
}

void Ints1::SharedCtor() {
  _cached_size_ = 0;
  i1_ = 0;
  i2_ = GOOGLE_LONGLONG(0);
  i3_ = 0u;
  i4_ = GOOGLE_ULONGLONG(0);
  i5_ = 0;
  i6_ = GOOGLE_LONGLONG(0);
  i7_ = 0u;
  i8_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Ints1::~Ints1() {
  // @@protoc_insertion_point(destructor:ints.Ints1)
  SharedDtor();
}

void Ints1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Ints1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ints1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ints1_descriptor_;
}

const Ints1& Ints1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_d_2fints_2fints_2eproto();
  return *default_instance_;
}

Ints1* Ints1::default_instance_ = NULL;

Ints1* Ints1::New() const {
  return new Ints1;
}

void Ints1::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Ints1*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(i2_, i8_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Ints1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ints.Ints1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 i1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i1_)));
          set_has_i1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_i2;
        break;
      }

      // required int64 i2 = 2;
      case 2: {
        if (tag == 16) {
         parse_i2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i2_)));
          set_has_i2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_i3;
        break;
      }

      // required uint32 i3 = 3;
      case 3: {
        if (tag == 24) {
         parse_i3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &i3_)));
          set_has_i3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_i4;
        break;
      }

      // required uint64 i4 = 4;
      case 4: {
        if (tag == 32) {
         parse_i4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &i4_)));
          set_has_i4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_i5;
        break;
      }

      // optional int32 i5 = 5;
      case 5: {
        if (tag == 40) {
         parse_i5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i5_)));
          set_has_i5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_i6;
        break;
      }

      // optional int64 i6 = 6;
      case 6: {
        if (tag == 48) {
         parse_i6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i6_)));
          set_has_i6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_i7;
        break;
      }

      // optional uint32 i7 = 7;
      case 7: {
        if (tag == 56) {
         parse_i7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &i7_)));
          set_has_i7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_i8;
        break;
      }

      // optional uint64 i8 = 8;
      case 8: {
        if (tag == 64) {
         parse_i8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &i8_)));
          set_has_i8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ints.Ints1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ints.Ints1)
  return false;
#undef DO_
}

void Ints1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ints.Ints1)
  // required int32 i1 = 1;
  if (has_i1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->i1(), output);
  }

  // required int64 i2 = 2;
  if (has_i2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->i2(), output);
  }

  // required uint32 i3 = 3;
  if (has_i3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->i3(), output);
  }

  // required uint64 i4 = 4;
  if (has_i4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->i4(), output);
  }

  // optional int32 i5 = 5;
  if (has_i5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->i5(), output);
  }

  // optional int64 i6 = 6;
  if (has_i6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->i6(), output);
  }

  // optional uint32 i7 = 7;
  if (has_i7()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->i7(), output);
  }

  // optional uint64 i8 = 8;
  if (has_i8()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->i8(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ints.Ints1)
}

::google::protobuf::uint8* Ints1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ints.Ints1)
  // required int32 i1 = 1;
  if (has_i1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->i1(), target);
  }

  // required int64 i2 = 2;
  if (has_i2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->i2(), target);
  }

  // required uint32 i3 = 3;
  if (has_i3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->i3(), target);
  }

  // required uint64 i4 = 4;
  if (has_i4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->i4(), target);
  }

  // optional int32 i5 = 5;
  if (has_i5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->i5(), target);
  }

  // optional int64 i6 = 6;
  if (has_i6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->i6(), target);
  }

  // optional uint32 i7 = 7;
  if (has_i7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->i7(), target);
  }

  // optional uint64 i8 = 8;
  if (has_i8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->i8(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ints.Ints1)
  return target;
}

int Ints1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 i1 = 1;
    if (has_i1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i1());
    }

    // required int64 i2 = 2;
    if (has_i2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i2());
    }

    // required uint32 i3 = 3;
    if (has_i3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->i3());
    }

    // required uint64 i4 = 4;
    if (has_i4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->i4());
    }

    // optional int32 i5 = 5;
    if (has_i5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i5());
    }

    // optional int64 i6 = 6;
    if (has_i6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i6());
    }

    // optional uint32 i7 = 7;
    if (has_i7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->i7());
    }

    // optional uint64 i8 = 8;
    if (has_i8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->i8());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ints1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Ints1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Ints1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Ints1::MergeFrom(const Ints1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_i1()) {
      set_i1(from.i1());
    }
    if (from.has_i2()) {
      set_i2(from.i2());
    }
    if (from.has_i3()) {
      set_i3(from.i3());
    }
    if (from.has_i4()) {
      set_i4(from.i4());
    }
    if (from.has_i5()) {
      set_i5(from.i5());
    }
    if (from.has_i6()) {
      set_i6(from.i6());
    }
    if (from.has_i7()) {
      set_i7(from.i7());
    }
    if (from.has_i8()) {
      set_i8(from.i8());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Ints1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ints1::CopyFrom(const Ints1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ints1::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Ints1::Swap(Ints1* other) {
  if (other != this) {
    std::swap(i1_, other->i1_);
    std::swap(i2_, other->i2_);
    std::swap(i3_, other->i3_);
    std::swap(i4_, other->i4_);
    std::swap(i5_, other->i5_);
    std::swap(i6_, other->i6_);
    std::swap(i7_, other->i7_);
    std::swap(i8_, other->i8_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Ints1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ints1_descriptor_;
  metadata.reflection = Ints1_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ints

// @@protoc_insertion_point(global_scope)
